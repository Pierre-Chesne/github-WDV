name: Deploiement d'une infra Windows Virtual Desktop

on:
  push:
    branches:
      - dev    
    paths:
      - "test/**"

env:
  AZURE_RG: "RG-WVD-00" # nom du resource groupe
  AZURE_LOCATION: "eastus2" # region Azure  
  HOSTPOOLS_NAME: "Host-Pool-01" # Nom du Host Pool
  POOLTYPE: "pooled" # Type de Pool "pooled" ou "personal"
  LBTYPE: "BreadthFirst" # Algo "BreathFirst" ou "Deptfirst"
  WORKSPACE_NAME: "Workspace-01" # Nom du Workslace
  VMSIZE: "Standard_D2s_v3" # taille de la 
  NUMBERS_OF_VM: 2 # Nombre de hosts dans le Host Pool
  HOST_NAME_PREFIX: "hostVDI" # Prefix des hosts  
  USERNAME: "pierrc" # compte admin local des Hosts
  DOMAINNAME: "ma-pme.local" # Nom de l'active directory (local) 
  DOMAINEUSERNAME: "pierrc@ma-pme.local" # Compte ayant le droit de mettre compte machine dans l'AD
  VIRTUALNETWORKRESOURCEGROUPNAME: "RG-AD-WVD" # Nom du ressource groupe joingnable par l'active directory (local) 
  VIRTUALNETWORKNAME: "AD-WVD-vnet" # Nom du Virtual Network joingnable par l'active directory (local) 
  SUBNETNAME: "subnet-test" # Nom du subnet joingnable par l'active directory (local)
  RG_IMAGES: "RG-Images-WVD" # Nom du ressource groupe de l'image générée par Packer
  IMAGE_WVD: "WVD-FSlogix-VLC-Image-v0.0007-test" # Nom de l'image générée par Packer
  DEPLOYNAME: "Rollup-001" # Nom du déploiement 

jobs:
  Test-Template:
    runs-on: ubuntu-20.04
   
    steps:

      - name: Creation du temp d'expiration du Token (host Pool)
        shell: pwsh
        run: |
          $Expiration=$((get-date).ToUniversalTime().AddHours(2).ToString('yyyy-MM-ddTHH:mm:ss.fffffffZ'))
          echo "::set-output name=content::$($Expiration)"
        id: var_expiration      
      
      - name: Test du temp d'expiration du Token (host Pool)
        run: |
          echo "The string is: ${{ steps.var_expiration.outputs.content }}"

      - name: Recuperation du repo
        uses: actions/checkout@v2

      - name: Login Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Creation du RG
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az group create --name ${{ env.AZURE_RG }} --location ${{ env.AZURE_LOCATION }}
           
      - name: Test du Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az deployment group validate --resource-group ${{ env.AZURE_RG }} --template-file ./ARM/azuredeploy.json --parameters 'hostpools_name=${{ env.HOSTPOOLS_NAME }}' 'poolType=${{ env.POOLTYPE }}' 'lbType=${{ env.LBTYPE }}' 'tokenExpirationTime=${{ steps.var_expiration.outputs.content }}' 'workspaces_name=${{ env.WORKSPACE_NAME }}' 'vmSize=${{ env.VMSIZE }}' 'subscription_ID=${{ secrets.SUBSCRIPTION_ID }}' 'RG_Images=${{ env.RG_IMAGES  }}' 'Image_WDV=${{ env.IMAGE_WVD }}' 'Numbers_of_VM=${{ env.NUMBERS_OF_VM }}' 'host_name_prefix=${{ env.HOST_NAME_PREFIX }}' 'Username=${{ env.USERNAME }}' 'pwdUser=${{ secrets.PWD_USER }}' 'domainName=${{ env.DOMAINNAME }}' 'domainUsername=${{ env.DOMAINEUSERNAME }}' 'domainUsernamePassword=${{ secrets.DOMAINE_USER_NAME_PASSWORD }}' 'virtualNetworkResourceGroupName=${{ env.VIRTUALNETWORKRESOURCEGROUPNAME }}' 'virtualNetworkName=${{ env.VIRTUALNETWORKNAME }}' 'subnetName=${{ env.SUBNETNAME }}'

      - name: What-If du Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az deployment group what-if --resource-group ${{ env.AZURE_RG }} --template-file ./ARM/azuredeploy.json --parameters 'hostpools_name=${{ env.HOSTPOOLS_NAME }}' 'poolType=${{ env.POOLTYPE }}' 'lbType=${{ env.LBTYPE }}' 'tokenExpirationTime=${{ steps.var_expiration.outputs.content }}' 'workspaces_name=${{ env.WORKSPACE_NAME }}' 'vmSize=${{ env.VMSIZE }}' 'subscription_ID=${{ secrets.SUBSCRIPTION_ID }}' 'RG_Images=${{ env.RG_IMAGES  }}' 'Image_WDV=${{ env.IMAGE_WVD }}' 'Numbers_of_VM=${{ env.NUMBERS_OF_VM }}' 'host_name_prefix=${{ env.HOST_NAME_PREFIX }}' 'Username=${{ env.USERNAME }}' 'pwdUser=${{ secrets.PWD_USER }}' 'domainName=${{ env.DOMAINNAME }}' 'domainUsername=${{ env.DOMAINEUSERNAME }}' 'domainUsernamePassword=${{ secrets.DOMAINE_USER_NAME_PASSWORD }}' 'virtualNetworkResourceGroupName=${{ env.VIRTUALNETWORKRESOURCEGROUPNAME }}' 'virtualNetworkName=${{ env.VIRTUALNETWORKNAME }}' 'subnetName=${{ env.SUBNETNAME }}'

      - name: Notification Webhook -> Slack
        run: |
          curl -H "Content-Type: application/json" -d "{\"text\": \"Validation du deploiement WVD\"}" https://hooks.slack.com/services/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      
  
  
  Deploy:
    runs-on: ubuntu-20.04
    needs: Test-Template
    environment:
      name: depl

    steps:

      - name: Recuperation du repo
        uses: actions/checkout@v2

      - name: Login Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Creation du temp d'expiration du Token (host Pool)
        shell: pwsh
        run: |
          $Expiration=$((get-date).ToUniversalTime().AddHours(2).ToString('yyyy-MM-ddTHH:mm:ss.fffffffZ'))
          echo "::set-output name=content::$($Expiration)"
        id: var_expiration      
      
      - name: Test du temp d'expiration du Token (host Pool)
        run: |
          echo "The string is: ${{ steps.var_expiration.outputs.content }}"    

      - name: Deploiement du Template ARM
        uses: azure/CLI@v1
        with:
          azcliversion: 2.17.1
          inlineScript: |
            az deployment group create --resource-group ${{ env.AZURE_RG }} --name ${{ env.DEPLOYNAME }} --template-file ./ARM/azuredeploy.json --parameters 'hostpools_name=${{ env.HOSTPOOLS_NAME }}' 'poolType=${{ env.POOLTYPE }}' 'lbType=${{ env.LBTYPE }}' 'tokenExpirationTime=${{ steps.var_expiration.outputs.content }}' 'workspaces_name=${{ env.WORKSPACE_NAME }}' 'vmSize=${{ env.VMSIZE }}' 'subscription_ID=${{ secrets.SUBSCRIPTION_ID }}' 'RG_Images=${{ env.RG_IMAGES  }}' 'Image_WDV=${{ env.IMAGE_WVD }}' 'Numbers_of_VM=${{ env.NUMBERS_OF_VM }}' 'host_name_prefix=${{ env.HOST_NAME_PREFIX }}' 'Username=${{ env.USERNAME }}' 'pwdUser=${{ secrets.PWD_USER }}' 'domainName=${{ env.DOMAINNAME }}' 'domainUsername=${{ env.DOMAINEUSERNAME }}' 'domainUsernamePassword=${{ secrets.DOMAINE_USER_NAME_PASSWORD }}' 'virtualNetworkResourceGroupName=${{ env.VIRTUALNETWORKRESOURCEGROUPNAME }}' 'virtualNetworkName=${{ env.VIRTUALNETWORKNAME }}' 'subnetName=${{ env.SUBNETNAME }}'

      - name: Notification Webhook -> Slack
        run: |
          curl -H "Content-Type: application/json" -d "{\"text\": \"Deploiement WVD termine\"}" https://hooks.slack.com/services/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      


         